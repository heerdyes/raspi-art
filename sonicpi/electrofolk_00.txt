# created by wavesmith (hm)
# mridangam inspired

tu=0.15
set :dhim,false
set :tak,false

define :tak00 do |p,t,a|
  synth :cnoise,note: p,release: 0.05,amp: a
  sleep t
end

define :dhim00 do |p,t,a|
  synth :fm,note: p,release: 0.15,amp: a
  synth :fm,note: p-0.1,release: 0.10,amp: a*0.8
  synth :fm,note: p+24.1,release: 0.18,amp: a*0.2
  synth :sine,note: p+19.08,release: 0.16,amp: a*0.25
  sleep t
end

define :dhim01 do |p,t,a|
  synth :fm,note: p,release: 0.15,amp: a
  synth :fm,note: p-0.1,release: 0.10,amp: a*0.6
  synth :pluck,note: p+24.1,release: 0.18,amp: a*0.4
  sleep t
end

define :takseq00 do
  3.times do
    tak00 :e4,tu,0.8
    tak00 :e3,tu,0.35
    tak00 :e3,tu,0.35
  end
  tak00 :e3,tu,0.4
  2.times do
    tak00 :e4,tu,0.8
    tak00 :e3,tu,0.35
  end
  tak00 :e3,tu,0.35
  tak00 :e3,tu,0.4
end

define :dhimseq00 do
  dhim00 :e2,tu,0.9
  sleep 2*tu
  dhim00 :e2,tu,rrand(0.6,0.9)
  sleep 4*tu
  sleep tu
  dhim00 :e2,tu,0.9
  sleep 2*tu
  dhim00 :e2,tu,rrand(0.6,0.9)
  sleep 3*tu
end

define :dhimseq01 do |a1,a2|
  dhim00 :e2,tu,rrand(a1,a2)
  sleep tu
  dhim01 :e2,tu,rrand(a1,a2)
  dhim01 :e2,tu,rrand(a1,a2)
  sleep tu
  dhim00 :e2,tu,rrand(a1,a2)
  sleep tu
  dhim00 :e2,tu,rrand(a1,a2)
  sleep tu
  sleep tu
  dhim01 :e2,tu,rrand(a1,a2)
  sleep tu
  dhim00 :e2,tu,rrand(a1,a2)
  dhim01 :e2,tu,rrand(a1,a2)
  sleep tu
  dhim00 :e2,tu,rrand(a1,a2)
end

live_loop :mpdsensor do
  n,v = sync "/midi/mpd218_midi_1/1/1/note_on"
  if n==36 then
    set :dhim, (not get[:dhim])
  elsif n==38 then
    set :tak, (not get[:tak])
  end
end

live_loop :dhimloop00 do
  if get[:dhim] then
    dhimseq01 0.7,0.9
  else
    sleep 16*tu
  end
end

with_fx :reverb,mix: 0.3 do
  with_fx :hpf,cutoff: 90 do
    live_loop :takloop00 do
      if get[:tak] then
        takseq00
      else
        sleep 16*tu
      end
    end
  end
end
